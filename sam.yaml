AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: Serverless Backend

Parameters:
  S3BucketName:
    Description: The name of the S3 buckets that stores the lambda functions
    Type: String
  
  ApiName:
    Description: The name of the AWS Rest Api
    Type: String

Globals:
  Function:
    Runtime: python3.6
    Timeout: 190
  Api:
    Name: !Ref ApiName

Resources:
################ CATEGORY FUNCTIONS ###########################################
  
  GETAllCategories:
    Type: AWS::Serverless::Function
    Properties:
      Description: Gets All Categories
      Handler: functions/categories/get_all_categories.handler
      CodeUri:
        Bucket: !Ref S3BucketName
        Key: functions.zip
      Policies: 
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /categories
            Method: GET

  GETAllSubmissionsByCategory:
    Type: AWS::Serverless::Function
    Properties:
      Description: Gets all submissions for a given category
      Handler: functions/categories/submissions/get_all_submissions_by_category.handler
      CodeUri:
          Bucket: !Ref S3BucketName
          Key: functions.zip
      Policies: 
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{category}/submissions
            Method: GET
          
################ SUBMISSION FUNCTIONS ###########################################
  
  # GETAllSubmissions:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Gets all submissions
  #     Handler: functions/submissions/get_all_submissions.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  POSTSubmission:
    Type: AWS::Serverless::Function
    Properties:
      Description: Create a new submission
      Handler: functions/submissions/post_submission.handler
      CodeUri:
          Bucket: !Ref S3BucketName
          Key: functions.zip
      Policies: 
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /submissions
            Method: POST
  GETSubmissionByID:
    Type: AWS::Serverless::Function
    Properties:
      Description: Get the details of a single submission
      Handler: functions/submissions/id/get_submission_by_id.handler
      CodeUri:
          Bucket: !Ref S3BucketName
          Key: functions.zip
      Policies: 
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /submissions/{id}
            Method: GET
  # POSTSubmissionVote:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Vote on a submission
  #     Handler: functions/submissions/post/submission_vote.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  # PUTSubmission:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Edit a submission
  #     Handler: functions/submissions/put/submission.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  # DELETESubmission:
    # Type: AWS::Serverless::Function
    # Properties:
    #   Description: Delete a submission
    #   Handler: functions/submissions/delete/submission.handler
    #   CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip

############### COMMENT FUNCTIONS ###########################################
  
  # GETAllSubmissionComments:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Gets all comments for a submission
  #     Handler: functions/comments/get/all_submission_comments.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  POSTComment:
    Type: AWS::Serverless::Function
    Properties:
      Description: Create a comment for a submission
      Handler: functions/comments/post_comment.handler
      CodeUri:
          Bucket: !Ref S3BucketName
          Key: functions.zip
      Policies: 
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /comments
            Method: POST
  # POSTSubmissionCommentVote:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Vote on a comment
  #     Handler: functions/comments/post/submission_comment_vote.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  # PUTSubmissionComment:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Edit a comment
  #     Handler: functions/comments/put/submission_comment.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  # DELETESubmissionComment:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Description: Delete a comment
  #     Handler: functions/comments/delete/submission_comment.handler
  #     CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip
  # GETSubmissionComment:
    # Type: AWS::Serverless::Function
    # Properties:
    #   Description: Get a comment
    #   Handler: functions/comments/get/submission_comment.handler
    #   CodeUri:
          # Bucket: !Ref S3BucketName
          # Key: functions.zip

  
                  
